##
## Compile everything concerning the kernel
## This Makefile can't be called directly, it must be included by another Makefile
## it's included by the ../Makefile
##
## @author: pulk66-s
## last update: 2023.09.20
##

# Include the configuration makefile
include ../mk/config.mk

# Add the current directory to the build dirs, it's starting from the src/ folder
KERNEL_FOLDER_NAME	:=	kernel
BUILD_DIRS			+=	${KERNEL_FOLDER_NAME}				\
						${KERNEL_FOLDER_NAME}/interrupts	\
						${KERNEL_FOLDER_NAME}/mem			\

# Add the kernel ELF binary to the binaries to build
KERNEL_BIN_NAME		:=	kernel.elf
BINARIES			+=	${KERNEL_BIN_NAME}

# Kernel ASM Sources
KERNEL_ASM_SOURCES	:=	${KERNEL_FOLDER_NAME}/start.S			\
						${KERNEL_FOLDER_NAME}/interrupts/isr.S	\

# Kernel C Sources
KERNEL_C_SOURCES	:=	${KERNEL_FOLDER_NAME}/main.c					\
						${KERNEL_FOLDER_NAME}/interrupts/interrupts.c	\

# Kernel Objects
KERNEL_OBJS			:=	${addprefix ${BIN_DIR}/, ${KERNEL_ASM_SOURCES:.S=.S.o}}	\
						${addprefix ${BIN_DIR}/, ${KERNEL_C_SOURCES:.c=.c.o}}

# Kernel libraries
KERNEL_LIBS			:=	${VGA_BIN} ${STR_BIN} ${TTY_BIN} ${PS2_KEYBOARD_BIN} ${MEM_BIN}

# By default it's building the kernel
all: build_kernel

# Building the kernel binary
build_kernel: ${KERNEL_BIN_NAME}
	@echo -e "${GREEN} Building ${PROJECT_NAME} kernel done${NC}"

# Building the kernel binary
${KERNEL_BIN_NAME}: ${KERNEL_OBJS} ${KERNEL_LIBS}
	@echo -e "${GREEN} Building ${PROJECT_NAME} kernel ${NC}"
	${LD} ${LDFLAGS} -T kernel/kernel.ld -o ${BIN_DIR}/${KERNEL_BIN_NAME} ${KERNEL_OBJS} ${KERNEL_LIBS}
# For debugging
	${OBJCOPY} -O binary ${BIN_DIR}/${KERNEL_BIN_NAME} ${BIN_DIR}/${KERNEL_FOLDER_NAME}/${KERNEL_BIN_NAME}.bin
	${OBJDUMP} -S ${BIN_DIR}/${KERNEL_BIN_NAME} > ${BIN_DIR}/${KERNEL_FOLDER_NAME}/${KERNEL_BIN_NAME}.asm

# Building the Kernel sources
${BIN_DIR}/${KERNEL_FOLDER_NAME}/%.c.o: ${KERNEL_FOLDER_NAME}/%.c
	@echo -e "${YELLOW} Compiling $< ${NC}"
	${CC} -c ${CFLAGS} $< -o $@
# For debugging
	${OBJDUMP} -S $@ > ${BIN_DIR}/${KERNEL_FOLDER_NAME}/$*.c.asm

# Building all the boot .S files
${BIN_DIR}/${KERNEL_FOLDER_NAME}/%.S.o: ${KERNEL_FOLDER_NAME}/%.S
	@echo -e "${YELLOW} Compiling $< ${NC}"
	${AS} -c ${ASFLAGS} $< -o $@
# For debugging
	${OBJDUMP} -S $@ > ${BIN_DIR}/${KERNEL_FOLDER_NAME}/$*.S.asm
